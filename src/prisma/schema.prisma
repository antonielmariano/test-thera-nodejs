// General
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Enums
enum CategoryType {
  ELECTRONICS
  CLOTHING
  BOOKS
  HOME_APPLIANCES
  FURNITURE
  TOYS
  SPORTS
  BEAUTY
  FOOD
  OTHER
}

enum OrderStatusType {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  COMPLETED
  CANCELED
  REFUNDED
}


// Models
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orders    Order[]
}

model Category {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  type      CategoryType  @default(OTHER) @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  
  products  Product[]
}

model Product {
  id              BigInt      @id @default(autoincrement())
  name            String
  categoryId      Int
  description     String
  price           Float
  stockQuantity   Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  category        Category    @relation(fields: [categoryId], references: [id])
  orderProducts   OrderProduct[]
}

model Order {
  id            BigInt         @id @default(autoincrement())
  totalAmount   Float
  statusId      Int
  userId        Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  user          User           @relation(fields: [userId], references: [id])
  status        Status         @relation(fields: [statusId], references: [id])
  orderProducts OrderProduct[]
}

model OrderProduct {
  id          BigInt   @id @default(autoincrement())
  orderId     BigInt
  productId   BigInt
  quantity    Int

  order       Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Status {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  type            OrderStatusType   @default(PENDING) @unique
  description     String?
  isFinal         Boolean           @default(false)
  nextStatusId    Int?

  nextStatus      Status?           @relation("StatusFlow", fields: [nextStatusId], references: [id])
  previousStatus  Status[]          @relation("StatusFlow")
  orders          Order[]
}